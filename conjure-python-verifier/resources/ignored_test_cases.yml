client:

  autoDeserialize:
    receiveBearerTokenAliasExample:
      - '""'

    receiveBearerTokenExample:
      - '{"value":" space"}'
      - '{"value":"space "}'
      - '{"value":"with space"}'
      - '{"value":""}'
      - '{"value":"#"}'
      - '{"value":" "}'
      - '{"value":"("}'
      - '{"value":"="}'
      - '{"value":"=a"}'

    receiveDateTimeAliasExample:
      - '""'
      - '"4/3/2018"'
      - '"1523040070"'
      - '"2017-01-02T03:04:05.0000000000Z"'
      - '"2017-01-02T04:04:05.000000000+01:00[Europe/Berlin]"'

    receiveDateTimeExample:
      - '{"value":"4/3/2018"}'
      - '{"value":"1523040070"}'
      - '{"value":"2017-01-02T03:04:05.0000000000Z"}'
      - '{"value":"2017-01-02T04:04:05.000000000+01:00[Europe/Berlin]"}'

    receiveDoubleExample:
      - '{"value":"1.23"}'
      - '{"value":"nan"}'

    # We do not round trip enums, or check for illegal characters
    receiveEnumExample:
      - '"THIS_IS_UNKNOWN"'
      - '"!!!"'
      - '"one-hundred"'

    receiveMapEnumExampleAlias:
      - '{"ONE": "", "TWO": "", "UNKNOWN_VARIANT": ""}'

    # We do not encode boolean keys correctly, we encode them as True/False instead of true/false
    receiveMapBooleanAliasExample:
      - '{"true": true}'

    # We do not fail on duplicate map keys
    receiveMapDoubleAliasExample:
      - '{"10": true, "10e0": false}'
      - '{"10": true, "10.0": false}'

    # python int range is over-permissive compared to spec
    receiveIntegerExample:
      - '{"value":-2147483649}'
      - '{"value":2147483648}'

    receiveRidAliasExample:
      - '"badString"'
      - '"ri.service.CAPLOCK.type.name"'
      - '"ri.service.instance.-123.name"'
      - '"ri..instance.type.noService"'
      - '"ri.service.instance.type."'
      - '"id.bad.id.class.b.name"'
      - '"ri:service::instance:type:name"'
      - '"ri.service.instance.type.name!@#"'
      - '"ri.service(name)..folder.foo"'
      - '""'

    receiveRidExample:
      - '{"value":""}'
      - '{"value":"badString"}'
      - '{"value":"ri.service.CAPLOCK.type.name"}'
      - '{"value":"ri.service.instance.-123.name"}'
      - '{"value":"ri..instance.type.noService"}'
      - '{"value":"ri.service.instance.type."}'
      - '{"value":"id.bad.id.class.b.name"}'
      - '{"value":"ri:service::instance:type:name"}'
      - '{"value":"ri.service.instance.type.name!@#"}'
      - '{"value":"ri.service(name)..folder.foo"}'

    receiveSafeLongAliasExample:
      - '-9007199254740992'
      - '9007199254740992'

    receiveSafeLongExample:
      - '{"value":-9007199254740992}'
      - '{"value":9007199254740992}'

    receiveSetStringExample:
      - '{"value":["a","a"]}'

    receiveUuidAliasExample:
      - '""'
      - '"80e6dd13-5f42-4e33-ad18"'

    receiveUuidExample:
      - '{"value":""}'
      - '{"value":"80e6dd13-5f42-4e33-ad18"}'

    receiveDoubleAliasExample:
      - '"nan"'
      - '"NAN"'
      - '"infinity"'
      - '"-infinity"'
      - '"+Infinity"'

    receiveRawOptionalExample:
      - '"1"'

  singleHeaderService: {}

  singlePathParamService:
    pathParamBoolean:
    - 'true'
    - 'false'

    pathParamString:
    - '""' # The server doesn't accept empty path params

    pathParamAliasString:
    - '""' # The server doesn't accept empty path params

  singleQueryService: {}
