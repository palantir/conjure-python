palantir_aliases:
  - &always-run
    filters:
      branches:
        only: /.*/
      tags:
        only: /.*/

version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8u171-jdk-node-browsers
    environment:
      GRADLE_OPTS: -Dorg.gradle.console=plain -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false

    steps:
      - checkout
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}

      - run: ./gradlew --parallel resolveConfigurations

      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - ~/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches

      - run: ./gradlew --parallel build

      - run:
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/build/.*TEST.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit

      - persist_to_workspace:
          root: '.'
          paths:
            - '.'

  py27:
    docker:
      - image: circleci/python:2.7.15
    working_directory: ~/project/conjure-python-verifier/python
    steps:
      - checkout:
          path: ~/project

      - attach_workspace:
          at: '~/project'

      - run:
          name: Install dependencies
          command: pip install --user setuptools tox==2.9.1 tox-virtualenv-no-download

      - restore_cache:
          key: tox-v2-py27-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}

      - run:
          name: Install tox things
          command: if [ ! -d ".tox" ]; then python -m tox -e py27 --notest; fi

      - save_cache:
          key: tox-v2-py27-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}
          paths:
            - .tox

      - run: python -m tox -e py27

      - run:
          name: Collect JUnit XML
          command: mkdir -p ~/junit && find . -type f -regex ".*/build/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

  mypy27:
    docker:
      - image: circleci/python:3.6.5
    working_directory: ~/project/conjure-python-verifier/python
    steps:
      - checkout:
          path: ~/project

      - attach_workspace:
          at: '~/project'

      - run:
          name: Install dependencies
          command: pip install --user setuptools tox==2.9.1 tox-virtualenv-no-download

      - restore_cache:
          key: tox-v2-mypy27-{{ checksum "tox.ini" }}-({ checksum "setup.py" })

      - run:
          name: Install tox things
          command: if [ ! -d ".tox" ]; then python -m tox -e mypy27 --notest; fi

      - save_cache:
          key: tox-v2-mypy27-{{ checksum "tox.ini" }}-({ checksum "setup.py" })
          paths:
            - .tox

      - run: mkdir build
      - run: python -m tox -e mypy27

      - run:
          name: Collect JUnit XML
          command: mkdir -p ~/junit && find . -type f -regex ".*/build/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

  py3:
    docker:
      - image: circleci/python:3.6.5
    working_directory: ~/project/conjure-python-verifier/python
    steps:
      - checkout:
          path: ~/project

      - attach_workspace:
          at: '~/project'

      - run:
          name: Install dependencies
          command: pip install --user setuptools tox==2.9.1 tox-virtualenv-no-download

      - restore_cache:
          key: tox-v2-py3-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}

      - run:
          name: Install tox things
          command: if [ ! -d ".tox" ]; then python -m tox -e py3 --notest; fi

      - save_cache:
          key: tox-v2-py3-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}
          paths:
            - .tox

      - run: python -m tox -e py3

      - run:
          name: Collect JUnit XML
          command: mkdir -p ~/junit && find . -type f -regex ".*/build/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

  mypy3:
    docker:
      - image: circleci/python:3.6.5
    working_directory: ~/project/conjure-python-verifier/python
    steps:
      - checkout:
          path: ~/project

      - attach_workspace:
          at: '~/project'

      - run:
          name: Install dependencies
          command: pip install --user setuptools tox==2.9.1 tox-virtualenv-no-download

      - restore_cache:
          key: tox-v2-mypy3-{{ checksum "tox.ini" }}-({ checksum "setup.py" })

      - run:
          name: Install tox things
          command: if [ ! -d ".tox" ]; then python -m tox -e mypy3 --notest; fi

      - save_cache:
          key: tox-v2-mypy3-{{ checksum "tox.ini" }}-({ checksum "setup.py" })
          paths:
            - .tox

      - run: mkdir build
      - run: python -m tox -e mypy3

      - run:
          name: Collect JUnit XML
          command: mkdir -p ~/junit && find . -type f -regex ".*/build/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

  publish:
    docker:
      - image: circleci/openjdk:8u171-jdk-node-browsers
    steps:
      - checkout
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}
      - attach_workspace:
          at: '.'
      - deploy:
          command: ./gradlew --stacktrace --continue publish

workflows:
  version: 2
  build:
    jobs:
      - build:
          <<: *always-run
      - py27:
          requires:
            - build
          <<: *always-run
      - py3:
          requires:
            - build
          <<: *always-run
      - mypy27:
          requires:
            - build
          <<: *always-run
      - mypy3:
          requires:
            - build
          <<: *always-run
      - publish:
          requires:
            - build
            - py27
            - py3
            - mypy27
            - mypy3
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

